#include<stdio.h>
#include<stlib.h>
	int A[10000]
	int parttion(int p,int r,int A[])
{
:temp=A[k];
	A[k]=A[r];
	A[r]=temp;
	b=A[r];

	i=p-1;
	for(j=p;j<=r-1;j++)
	{
		if(A[j]<=b)
		{
			i++;
			temp=A[i];
			A[i]=A[j];
			A[j]=temp;
		}
	}
	temp=A[i+1];
	A[i+1]=A[r];
	A[r]=temp;
	return(i+1);
}
void quicksort(int A[],int p,int r)
{
	int q,i;
	if(p<r)
	{
		q=partition(A,p,r);
		quicksort(A,p,q-1);
		quicksort(A,q+1,r);
	}

}


void perm(int m)
{
	int i,j,k,temp,key;
	if(m==n)
	{
		for(i=1;i<=n;i++)
		{
			printf("%d ",b[i]);
		}
		printf("\n");
	}
	else
	{
	   for(i=m;i<=n;i++)
		{
		  quicksort(b,m,n);
          temp=b[i];
		  b[i]=b[m];
		  b[m]=temp;
		  perm(m+1);
          temp=b[i];
		  b[i]=b[m];
		  b[m]=temp;
		}
	}
}
 
int main()
{
	int m,i,j;
	scanf("%d",&n);
	for(i=1;i<=n;i++)
	{
      b[i]=i;
	}
	perm(1);
    return 0;
}





15:22:00
3,2  #include<stdio.h>
int a[11],f[11],n;
int main()
{
	void Perm(int m);
	int i;
	scanf("%d",&n);
	for(i = 1; i<=n; i++ )
	{
		f[i]=0;
	}
	Perm(1);
	return 0;
}

void Perm(int m)
{
	int i,j;
	if(m==(n+1))
	{
		for(i = 1; i<n; i++)
			printf("%d ",a[i]);
		printf("%d\n",a[n]);
	}
	else
	{
		for( j = 1; j<=n; j++)
		{
			if(f[j]==0)
			{
				a[m]=j;
				f[j]=1;
				Perm(m+1);
				f[j]=0;
			}
		}
	}
}





